{
  functions: true,
  variableNameTransforms: ["dasherize"],
}

{{#extend "scss_spritesmith_template"}}
{{#content "sprites" mode="append"}}
// Retina sprites
//
// In retina sprites, the suffix "-retina" corresponds to the "size" in
// the formula.

{{#each retina_sprites}}
$sprite-{{removePrefix strings.name_name}}-retina: "sprite-{{removePrefix name}}-retina";
$sprite-{{removePrefix strings.name_x}}-retina: {{px.x}};
$sprite-{{removePrefix strings.name_y}}-retina: {{px.y}};
$sprite-{{removePrefix strings.name_offset_x}}-retina: {{px.offset_x}};
$sprite-{{removePrefix strings.name_offset_y}}-retina: {{px.offset_y}};
$sprite-{{removePrefix strings.name_width}}-retina: {{px.width}};
$sprite-{{removePrefix strings.name_height}}-retina: {{px.height}};
$sprite-{{removePrefix strings.name}}-retina: ();
$sprite-{{removePrefix strings.name}}-retina: map-merge(
  (
    "name": $sprite-{{removePrefix strings.name_name}}-retina,
    "x": $sprite-{{removePrefix strings.name_x}}-retina,
    "y": $sprite-{{removePrefix strings.name_y}}-retina,
    "offset-x": $sprite-{{removePrefix strings.name_offset_x}}-retina,
    "offset-y": $sprite-{{removePrefix strings.name_offset_y}}-retina,
    "width": $sprite-{{removePrefix strings.name_width}}-retina,
    "height": $sprite-{{removePrefix strings.name_height}}-retina,
  ),
  $sprite-{{removePrefix strings.name}}-retina
);

{{/each}}
{{/content}}
{{#content "spritesheet" mode="append"}}

// Retina spritesheet

$spritesheet-width-retina: {{retina_spritesheet.px.width}};
$spritesheet-height-retina: {{retina_spritesheet.px.height}};
$spritesheet-url-retina: "{{{retina_spritesheet.escaped_image}}}";
$spritesheet-sprites-retina: (
  {{#each retina_sprites}}
  {{#unless @last}}
  $sprite-{{removePrefix strings.name}}-retina,
  {{else}}
  $sprite-{{removePrefix strings.name}}-retina
  {{/unless}}
  {{/each}}
);
$spritesheet-retina: ();
$spritesheet-retina: map-merge(
  (
    "width": $spritesheet-width-retina,
    "height": $spritesheet-height-retina,
    "url": $spritesheet-url-retina,
    "sprites": $spritesheet-sprites-retina,
  ),
  $spritesheet-retina
);

// Sprite groups
//
// Sprite groups contain information about sprites and their retina pairs.

{{#each retina_groups}}
$sprite-{{strings.name_group_name}}: "sprite-{{name}}";
$sprite-{{strings.name_group}}: ();
$sprite-{{strings.name_group}}: map-merge(
  (
    "name": $sprite-{{strings.name_group_name}},
    "normal": $sprite-{{normal.strings.name}},
    "retina": $sprite-{{removePrefix retina.strings.name}}-retina,
  ),
  $sprite-{{strings.name_group}}
);

{{/each}}
$sprite-groups: (
  {{#each retina_groups}}
  {{#unless @last}}
  $sprite-{{strings.name_group}},
  {{else}}
  $sprite-{{strings.name_group}}
  {{/unless}}
  {{/each}}
);
{{/content}}
{{#content "sprite-functions" mode="append"}}
{{#if options.functions}}

// Retina sprite mixins
//
// Use variables like "sprite-something-group" for these mixins to insert
// information about the normal and retina version of the sprite into your
// CSS classes.

@mixin sprite-background-size($sprite-type) {
  @if $sprite-type == "normal" {
    background-size: $spritesheet-width $spritesheet-height;
  } @else {
    background-size: $spritesheet-width-retina $spritesheet-height-retina;
  }
}

@mixin sprite-retina($sprite-group) {
  $sprite-normal: map-get($sprite-group, "normal");
  $sprite-retina: map-get($sprite-group, "retina");
  @include sprite($sprite-normal);

  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    background-image: url(#{$spritesheet-url-retina});
    @include sprite-background-size("normal");
  }
}
{{/if}}
{{/content}}
{{#content "spritesheet-functions" mode="append"}}
{{#if options.functions}}

// Retina spritesheet mixins
//
// Use the `$sprite-groups` variable when calling a mixin to get a set of CSS
// classes that contain information about the normal and retina version of
// each sprite.

@mixin sprites-retina($sprite-groups) {
  @each $sprite-group in $sprite-groups {
    $sprite-name: map-get($sprite-group, "name");
    .#{$sprite-name} {
      @include sprite-retina($sprite-group);
    }
  }
}
{{/if}}
{{/content}}
{{/extend}}
